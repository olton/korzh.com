const id = "tutorial/replaceing-datepicker-widget.mdx";
						const collection = "js-docs";
						const slug = "tutorial/replacing-datepicker-widget";
						const body = "import PageTitle from \"../../../components/PageTitle.astro\"\r\n\r\n<PageTitle title={frontmatter.title} />\r\n\r\nEasyQuery.JS allows you to replace the default Calendar widget with any other component by your choice. Here we are going to describe how to change it with your Kendo DateTime picker.\r\n\r\n## Step 1: Add Kendo styles and scripts\r\n\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://kendo.cdn.telerik.com/2020.3.915/styles/kendo.common.min.css\" />\r\n<link rel=\"stylesheet\" href=\"https://kendo.cdn.telerik.com/2020.3.915/styles/kendo.default.min.css\" />\r\n\r\n<script src=\"https://kendo.cdn.telerik.com/2020.3.915/js/jquery.min.js\"></script>\r\n<script src=\"https://kendo.cdn.telerik.com/2020.3.915/js/kendo.all.min.js\"></script>\r\n```\r\n\r\n## Step 2: Add a \"descendant\" of EasyQuery's DateTimePicker class\r\n\r\n```js\r\n<script>\r\n    function KendoDateTimePicker(options) {\r\n        Object.getPrototypeOf(KendoDateTimePicker.prototype).constructor.call(this, options);\r\n    }\r\n\r\n    KendoDateTimePicker.prototype = Object.create(easyquery.ui.DateTimePicker.prototype);\r\n\r\n    KendoDateTimePicker.prototype.show = function (anchor) {\r\n\r\n        var self = this;\r\n        if (self.options.beforeShow) {\r\n            self.options.beforeShow();\r\n        }\r\n\r\n        var kendoOptions = {\r\n            componentType: \"modern\",\r\n            value: self.currentDateTime,\r\n            change: function () {\r\n                var dateTime = self.kendoPicker.value();\r\n                self.currentDateTime = dateTime;\r\n                self.dateTimeChanged();\r\n            },\r\n            close: function () {\r\n                var dateTime = self.kendoPicker.value();\r\n                self.apply(dateTime);\r\n            }\r\n        };\r\n\r\n        if (self.options.showCalendar) {\r\n            if (self.options.showTimePicker) {\r\n                $(anchor).kendoDateTimePicker(kendoOptions);\r\n                self.kendoPicker = $(anchor).data(\"kendoDateTimePicker\");\r\n            }\r\n            else {\r\n                $(anchor).kendoDatePicker(kendoOptions);\r\n                self.kendoPicker = $(anchor).data(\"kendoDatePicker\");\r\n            }\r\n        }\r\n        else {\r\n            $(anchor).kendoTimePicker(kendoOptions);\r\n            self.kendoPicker = $(anchor).data(\"kendoTimePicker\");\r\n        }\r\n\r\n        self.kendoPicker.open();\r\n    }\r\n\r\n    KendoDateTimePicker.prototype.destroy = function () {\r\n        this.kendoPicker.destroy();\r\n    }\r\n\r\n</script>\r\n```\r\n\r\n## Step 3: add a resolver function that returns new date/time picker widget\r\n\r\n```js\r\nvar viewOptions = {\r\n    queryPanel: {\r\n       dateTimePickerResolver: function (options) {\r\n           return new KendoDateTimePicker(options)\r\n       }\r\n    }\r\n}\r\n```\r\n\r\n\r\n## All set!\r\n\r\nWith the code above, QueryPanel widget will use Kendo date/time picker widget instead of the EasyQuery's default one.";
						const data = {title:"Replacing default Calendar widget with KendoDatePicker",description:"EasyQuery.JS allows you to replace the default Calendar widget with any other component by your choice. Here we are going to describe how to change it with your Kendo DateTime picker."};
						const _internal = {
							type: 'content',
							filePath: "D:/Projects/sites/korzh.com/src/content/js-docs/tutorial/replaceing-datepicker-widget.mdx",
							rawData: "\r\ntitle: Replacing default Calendar widget with KendoDatePicker\r\ndescription: EasyQuery.JS allows you to replace the default Calendar widget with any other component by your choice. Here we are going to describe how to change it with your Kendo DateTime picker.\r\nslug: tutorial/replacing-datepicker-widget\r",
						};

export { _internal, body, collection, data, id, slug };
